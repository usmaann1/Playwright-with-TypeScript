{  
  "createTestType": "Input Output Test - Ignore",
  "createTestOldType": "Match - Expected output is",
  "createTestNewType": "Match - Expected output is",
  "createTestName": "Test",
  "testInput": "console.log('This is a Test!!!');",
  "testOutput": "This is a Test!!!",
  "firstName": "test",
  "LastName": "test",
  "completeName": "test test",
  "uploadFilePath": "./test-environment/test-assets/test-resource-files/teamUploadTest.js",
  "projectTypeOption1": "Javascript (Node.js)",
  "projectTypeOption2": "Python with Turtle",
  "projectTypeOption3": "Python with Pygame",
  "projectTypeOption4": "Python with Tkinter",
  "projectTypeOption5": "Python with PyQT",
  "projectTypeOption6": "Python with Matplotlib",
  "projectTypeOption7": "Python with Pillow",
  "projectTypeOption8": "Python",
  "projectTypeOption9": "Java",
  "projectTypeOption10": "C#",
  "projectTypeOption11": "C++",
  "pythonTestInput": "def square_numbers(numbers):\n    return [num ** 2 for num in numbers]\n\nnumbers = [1, 2, 3, 4, 5]\nsquares = square_numbers(numbers)\nprint('Original numbers:', numbers)\nprint('Squared numbers:', squares)",
  "pythonTestOutput": "Original numbers: [1, 2, 3, 4, 5]\nSquared numbers: [1, 4, 9, 16, 25]",
  "javaTestInput":"public class Main {\n    public static void main(String[] args) {\n        int[] numbers = {1, 2, 3, 4, 5};\n        int[] squares = new int[numbers.length];\n        \n        for (int i = 0; i < numbers.length; i++) {\n            squares[i] = numbers[i] * numbers[i];\n        }\n        \n        System.out.println(\"Original numbers: \");\n        for (int num : numbers) {\n            System.out.print(num + \" \");\n        }\n        \n        System.out.println(\"\\nSquared numbers: \");\n        for (int square : squares) {\n            System.out.print(square + \" \");\n        }\n    }\n}",
  "javaTestOutput": "Original numbers: \n1 2 3 4 5 \nSquared numbers: \n1 4 9 16 25 ",
  "csharpTestInput": "using System;\n\nclass Program\n{\n    static void Main()\n    {\n        int[] numbers = {1, 2, 3, 4, 5};\n        int[] squares = new int[numbers.Length];\n        \n        for (int i = 0; i < numbers.Length; i++)\n        {\n            squares[i] = numbers[i] * numbers[i];\n        }\n        \n        Console.WriteLine(\"Original numbers:\");\n        foreach (int num in numbers)\n        {\n            Console.Write(num + \" \");\n        }\n        \n        Console.WriteLine(\"\\nSquared numbers:\");\n        foreach (int square in squares)\n        {\n            Console.Write(square + \" \");\n        }\n    }\n}",
  "csharpTestOutput": "Original numbers:\n1 2 3 4 5 \nSquared numbers:\n1 4 9 16 25 ",
  "cppTestInput": "#include <iostream>\n\nint main() {\n    int numbers[] = {1, 2, 3, 4, 5};\n    int size = sizeof(numbers) / sizeof(numbers[0]);\n    int squares[size];\n    \n    for (int i = 0; i < size; i++) {\n        squares[i] = numbers[i] * numbers[i];\n    }\n    \n    std::cout << \"Original numbers: \";\n    for (int i = 0; i < size; i++) {\n        std::cout << numbers[i] << \" \";\n    }\n    \n    std::cout << \"\\nSquared numbers: \";\n    for (int i = 0; i < size; i++) {\n        std::cout << squares[i] << \" \";\n    }\n    \n    return 0;\n}",
  "cppTestOutput": "Original numbers: 1 2 3 4 5 \nSquared numbers: 1 4 9 16 25 "
}
