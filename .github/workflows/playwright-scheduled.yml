name: Playwright Tests
on:
  schedule:
    - cron: '*/5 * * * *'  # Runs every 5 minutes
  workflow_dispatch:  # Allows manual triggering of the workflow
jobs:
  test:
    timeout-minutes: 120
    runs-on: ubuntu-latest
   
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
    - name: Install dependencies
      run: npm install
    - name: Install Playwright Browsers
      run: npx playwright install
    - name: Run Specific Playwright Test
      id: test
      run: |
       npx playwright test test-environment/test-cases/team-courses/team-courses.test.js --grep "TC: Flow Test Python1" --reporter=html --output=./test-results --config=playwright.config.js

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report
        retention-days: 30
        
    - name: Parse Test Results
      id: parse-results
      run: |
        PASSED=$(grep -o '"status":"passed"' downloaded-report/*.json | wc -l)
        FAILED=$(grep -o '"status":"failed"' downloaded-report/*.json | wc -l)
        echo "PASSED=$PASSED" >> $GITHUB_ENV
        echo "FAILED=$FAILED" >> $GITHUB_ENV
        
    - name: Notify Slack
      if: always()  # Always send a notification, even if previous steps fail
      run: |
        curl -X POST -H 'Content-type: application/json' \
        --data '{"text":"GitHub Actions workflow completed. Job Status: ${{ job.status }}. Passed tests: ${{ env.PASSED }}. Failed tests: ${{ env.FAILED }}.\"}" \
        https://hooks.slack.com/services/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
        
  reports:
      runs-on: ubuntu-latest
      needs: test
  
      steps:
      - name: Checkout code
        uses: actions/checkout@v2
  
      - name: Download reports
        uses: actions/download-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
