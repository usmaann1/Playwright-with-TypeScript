name: Playwright Tests

on:
  schedule:
    - cron: '*/5 * * * *'  # Runs every 5 minutes
  workflow_dispatch:  # Allows manual triggering

jobs:
  test:
    timeout-minutes: 120
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Install Playwright Browsers
      run: npx playwright install

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install dependencies
      run: npm install

    - name: Run Playwright Tests
      run: |
        npx playwright test test-environment/test-cases/team-courses/team-courses.test.js --grep "TC: Flow Test Python1" --reporter=json > results.json

    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: results.json

    - name: Parse Test Results
      id: parse-results
      run: |
        PASSED=$(jq '[.suites[].tests[].results[] | select(.status=="passed")] | length' results.json)
        FAILED=$(jq '[.suites[].tests[].results[] | select(.status=="failed")] | length' results.json)
        echo "PASSED=$PASSED" >> $GITHUB_ENV
        echo "FAILED=$FAILED" >> $GITHUB_ENV

    - name: Display Results
      run: |
        echo "Total Passed: ${{ env.PASSED }}, Total Failed: ${{ env.FAILED }}"
        
    - name: Notify Slack
      if: always()  # Always send a notification, even if previous steps fail
      run: |
        curl -X POST -H 'Content-type: application/json' \
        --data '{"text":"GitHub Actions workflow completed. Number of failed tests: ${{ env.FAILED }}. Number of passed tests: ${{ env.PASSED }}."}' \
        https://hooks.slack.com/services/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
