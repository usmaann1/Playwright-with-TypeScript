name: Playwright Tests

on:
  workflow_dispatch:  # Allows manual triggering

jobs:
  test:
    timeout-minutes: 120
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Install Playwright Browsers
      run: npx playwright install

    - name: Run Playwright Tests
      run: |
        npx playwright test test-environment/test-cases/team-courses/team-courses.test.js --reporter=json > results.json
        zip -r test-results.zip results.json

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: test-results.zip

  parse-and-notify:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Download test results
      uses: actions/download-artifact@v4
      with:
        name: test-results
        path: downloaded-report

    - name: Install jq and unzip
      run: sudo apt-get install -y jq unzip

    - name: Extract the Zip File
      run: |
        unzip downloaded-report/test-results.zip -d extracted-report

    - name: Count Test Cases
      id: count-tests
      run: |
        # Check the structure of the JSON file for correctness
        jq '.' extracted-report/results.json

        # Count the number of passed and failed test cases
        PASSED=$(jq '[.suites[]?.suites[]?.specs[]?.tests[]?.results[]? | select(.status=="passed")] | length' extracted-report/results.json)
        FAILED=$(jq '[.suites[]?.suites[]?.specs[]?.tests[]?.results[]? | select(.status=="failed")] | length' extracted-report/results.json)

        # Use default values if results are empty or null
        echo $(jq '[.suites[]?.suites[]')
        echo PASSED
        echo FAILED
        echo "PASSED=${PASSED:-0}" >> $GITHUB_ENV
        echo "FAILED=${FAILED:-0}" >> $GITHUB_ENV

    - name: Display Results
      run: |
        echo "Total Passed: ${{ env.PASSED }}, Total Failed: ${{ env.FAILED }}"

    - name: Notify Slack
      if: always()  # Always send a notification, even if previous steps fail
      run: |
        curl -X POST -H 'Content-type: application/json' \
        --data "{\"text\":\"GitHub Actions workflow completed. Number of failed tests: ${{ env.FAILED }}. Number of passed tests: ${{ env.PASSED }}.\"}" \
        https://hooks.slack.com/services/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
